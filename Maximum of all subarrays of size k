https://www.youtube.com/watch?v=xFJXtB5vSmM&list=PL_z_8CaSLPWeM8BDJmIYDaoQ5zuwyxnfj&index=6&ab_channel=AdityaVerma


https://practice.geeksforgeeks.org/problems/maximum-of-all-subarrays-of-size-k3101/1


class Solution
{
  public:
    //Function to find maximum of each subarray of size k.
    vector <int> max_of_subarrays(int *arr, int n, int k)
    {
        priority_queue<pair<int,int>> pq;
        int i=0, j=0;
        vector<int> ans;
        while(j<n){
            if(j-i+1 < k){
                pq.push({arr[j],j});
                j+=1;
            }
            else{
                if(i-1<0){
                    pq.push({arr[j],j});
                    ans.push_back(pq.top().first);
                }
                else{
                    pq.push({arr[j],j});
                    while(!pq.empty()){
                        if(pq.top().second>=i)break;
                        pq.pop();
                    }
                    ans.push_back(pq.top().first);
                }
                i+=1; j+=1;
            }
        }
        return ans;
    }
};
